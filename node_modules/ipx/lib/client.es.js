const filterEmpty = (arr) => arr.filter((o) => o && o.length);
const normalizeObject = (o) => Object.keys(o).map((k) => [].concat(k, o[k]).join("_"));
const normalizeArray = (a) => a.join("_");
const normalize = (o) => typeof o === "string" ? [o] : Array.isArray(o) ? normalizeArray(o) : normalizeObject(o);

const img = ({
  baseURL = "",
  basePath = "",
  opts,
  adapter = "local",
  format = "_",
  presets
}) => {
  opts = opts ? normalize(opts) : [];
  baseURL = baseURL.replace("://", ":///");
  const fn = (path, _opts, _format, _adapter = "") => {
    const optsStr = filterEmpty([].concat(opts, _opts ? normalize(_opts) : [])).join(",");
    return (baseURL + "/" + (_adapter || adapter) + "/" + (_format || format) + "/" + optsStr + "/" + basePath + "/" + path).replace(/\/\//g, "/");
  };
  if (presets) {
    Object.keys(presets).forEach((key) => {
      const preset = presets[key];
      const presetOpts = normalize(preset.opts);
      fn[key] = (path, _opts, _format, _adapter = "") => fn(path, _opts || presetOpts, _format || preset.format, _adapter || preset.adapter);
    });
  }
  return fn;
};

export { img };
